@page "/learnblazor/bindprop"

<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <div>
            Active: <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" /><br />
        </div>
        <div>
            Price: <input type="number" @bind-value="Product.Price" @bind-value:event="oninput" /><br />
        </div>

        <div>
            Product Properties:
            <select @bind="selectedProp">

                @foreach (var item in Product.ProductProp)
                {
                    <option value="@item.Key">@item.Value</option>
                }

            </select>
        </div>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Sumary</h3><hr />
        Name: @Product.Name<br />
        Active: @Product.IsActive<br />
        Price: @Product.Price<br />
        This product is: @(Product.IsActive? "Active":null)<br />
        Property Selected: @selectedProp <br />
        @if (!string.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property value: @Product.ProductProp.FirstOrDefault(u=>u.Key == selectedProp).Value</p>
        }
    </div>
    <div class="col-12 pt-4">
        <h2 class="text-success">Product table</h2>
        <table class="table table-striped">
            <tbody>
                @foreach (var item in Products)
                {
                    <tr>
                        <td>
                            <input type="text" @bind-value="item.Name" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input type="text" @bind-value="item.Price" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input type="checkbox" @bind-value="item.IsActive" checked="@(item.IsActive?"checked":null)" />
                        </td>
                    </tr>

                }
            </tbody>
        </table>
        <br />
        <h2>Product Summary</h2>
        @foreach (var item in Products)
                {
                    <p> @item.Name [@item.Price] is @(item.IsActive?"Active":"Inactive")</p>
                }
    </div>
</div>


@code {
    private string selectedProp = "";
    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Notebook",
            IsActive = true,
            Price = 10.99,
            ProductProp = new List<Demo_ProductProp>()
        {
            new Demo_ProductProp{Id = 1, Key = "Note", Value = "Black" },
            new Demo_ProductProp{Id = 2, Key = "Mouse", Value = "White" },
            new Demo_ProductProp{Id = 3, Key = "Teclado", Value = "Green" },
        }
        };
    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 10.99,
                ProductProp = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                Price = 10.99,
                IsActive = true,
                ProductProp = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }
}
